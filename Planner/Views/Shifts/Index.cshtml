@model IEnumerable<Planner.Models.Shift>

@{
    ViewData["Title"] = "Shift planner";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Shift planner</h1>
<p>
    <a asp-action="Create">Create New</a>
</p>

<p id="Week"></p>
@{
    var date = DateTime.Now.Date;
    if (Context.Request.Query["date"].Count > 0 &&
        Context.Request.Query["date"].ToString() != ""
        && DateTime.TryParse(Context.Request.Query["date"].ToString(), out date))
    {
    }
    DateTime monday = date.AddDays(-(int)date.DayOfWeek + (int)DayOfWeek.Monday);

}
<h2>@monday.ToString("MMMM dd") - @monday.AddDays(6).ToString("dd"), @monday.ToString("yyyy")</h2>
<a href="?date=@monday.AddDays(-7)"><</a>
<a href="?date=@monday.AddDays(7)">></a>
<a href="?date=">now</a>
<form style="display: inline-block" method="get">
    <input type="date" name="date" value="@date.ToString("yyyy-MM-dd")" onchange="this.form.submit()" />
</form>
<div id="shiftSchedule">
    @for (var i = 0; i < 7; i++)
    {
        <div id="@monday.AddDays(i).ToString("dddd")">
            <h3>@monday.AddDays(i).ToString("dddd dd")</h3>
            @foreach (var shift in Model)
            {
                @if (monday.AddDays(i) == shift.Date)
                {
                    <div class="shift @(String.IsNullOrEmpty(shift.Users) ? "unassigned" : "assigned") " attr-id="@shift.Id" attr-users="@shift.Users">
                        <h5>@shift.Title</h5>
                        <span>@shift.StartTime.ToString(@"hh\:mm") - @shift.EndTime.ToString(@"hh\:mm")</span><br />

                        <a class="editIcon" asp-action="Edit" asp-route-id="@shift.Id"><img src="~/lib/icons/appbar.edit.svg" alt="Edit shift" /></a>
                        <a class="deleteIcon" asp-action="Delete" asp-route-id="@shift.Id"><img src="~/lib/icons/appbar.delete.svg" alt="Delete shift" /></a>
                        @if (String.IsNullOrEmpty(shift.Users))
                        {
                            <a class="assignIcon" href="#" onclick="openAssignWindow(this,'@shift.Date.ToString("yyyy-MM-dd")')"><img src="~/lib/icons/appbar.group.add.svg" alt="Assign User" /></a>
                        }
                        else
                        {
                            <span><img id="profileIcon" src="~/lib/icons/appbar.people.svg" alt="People icon" /> @shift.Users</span><br />
                            <a class="unAssignIcon" href="#" onclick="unAssign(@shift.Id)"><img src="~/lib/icons/appbar.group.delete.svg" alt="Unassign User" /></a>
                        }
                    </div>
                }
            }

        </div>
    }
</div>

<script>

    function openAssignWindow(el, date) {
        shiftId = el.parentNode.getAttribute("attr-id");

        assignWindow = document.getElementById("assignWindow");
        if (assignWindow !== null) {
            assignWindow.parentNode.removeChild(assignWindow);
        }
        assignWindow = document.createElement("div");
        assignWindow.setAttribute("id", "assignWindow");
        assignWindow.setAttribute("attr-id", shiftId);

        document.getElementsByTagName("BODY")[0].appendChild(assignWindow);

        var xhr = new XMLHttpRequest();

        xhr.addEventListener("load", createAssignWindow);

        xhr.responseType = "json";

        xhr.open("GET", "/Shifts/availableOnDate?date=" + encodeURIComponent(date));
        xhr.send();
    }

    function createAssignWindow() {
        if (this.status === 200) {
            var assignWindow = document.getElementById("assignWindow");
            var shiftId = assignWindow.getAttribute("attr-id");
            assignWindow.innerHTML += "<h4>Available users</h4><a href=''>Back</a><br />";

            assignWindow.innerHTML += "<p style='margin-bottom: 0;'>Select an available user: </p>";
            assignWindow.innerHTML += "<select id='selectAvailability' onchange='selectAvailability()'></select>";
            var select = document.getElementById("selectAvailability");
            select.innerHTML += "<option selected disabled>Select availability</option>"

            for (var i = 0; i < this.response.length; i++) {
                select.innerHTML += "<option value='" + this.response[i].Id + "'>" + this.response[i].Username +
                    " (" + this.response[i].StartTime.slice(0, -3) +
                    " - " + this.response[i].EndTime.slice(0, -3) +
                    ")</option>";
            }

            var xhr = new XMLHttpRequest();

            xhr.addEventListener("load", function () {
                var assignWindow = document.getElementById("assignWindow");
                assignWindow.innerHTML += "<p style='margin-bottom: 0;'>Select any user: </p>";
                assignWindow.innerHTML += "<select id='selectUser' onchange='selectUser()'></select>";
                var select = document.getElementById("selectUser");
                select.innerHTML += "<option selected disabled>Select user</option>"
                for (var i = 0; i < this.response.length; i++) {
                    select.innerHTML += "<option value='" + this.response[i].UserName + "'>" + this.response[i].UserName + "</option>"
                }
            });

            xhr.responseType = "json";

            xhr.open("GET", "/Users");
            xhr.send();

        } else {
            console.log(this.status);
        }
    }

    function selectAvailability() {
        var assignWindow = document.getElementById("assignWindow");
        var shiftId = assignWindow.getAttribute("attr-id");
        var select = document.getElementById("selectAvailability");
        var availabilityId = select.options[select.selectedIndex].value;

        assignAvailability(availabilityId, shiftId);
    }

    function assignAvailability(availabilityId, shiftId) {
        var xhr = new XMLHttpRequest();

        xhr.addEventListener("load", function () {
            if (this.status == 200) {
                location.reload();
            } else {
                alert("Error " + this.status);
            }
        });

        xhr.responseType = "json";

        xhr.open("POST", "/Shifts/assignAvailability?shiftId=" + shiftId + "&availabilityId=" + availabilityId);
        xhr.send();
    }

    function selectUser() {
        var assignWindow = document.getElementById("assignWindow");
        var shiftId = assignWindow.getAttribute("attr-id");
        var select = document.getElementById("selectUser");
        var user = select.options[select.selectedIndex].value;

        assignUser(user, shiftId);
    }

    function assignUser(username, shiftId) {
        var xhr = new XMLHttpRequest();

        xhr.addEventListener("load", function () {
            if (this.status == 200) {
                location.reload();
            } else {
                alert("Error " + this.status);
            }
        });

        xhr.responseType = "json";

        xhr.open("POST", "/Shifts/assignUser?shiftId=" + shiftId + "&username=" + username);
        xhr.send();
    }


    function unAssign(shiftId) {
        var xhr = new XMLHttpRequest();

        xhr.addEventListener("load", function () {
            if (this.status == 200) {
                location.reload();
            } else {
                alert("Error " + this.status);
            }
        });

        xhr.responseType = "json";

        xhr.open("POST", "/Shifts/unAssignShift?id=" + shiftId);
        xhr.send();
    }
</script>